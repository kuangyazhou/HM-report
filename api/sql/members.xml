<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
  <sql-requests desc="会员数据">
    <!-- <sql-request id="QUERY_MEMBER_ALL" desc="会员特征全量数据">
    <![CDATA[
        SELECT * FROM hemiaodata.report_store_portrait WHERE store_code=:storecode
      ]]>
  </sql-request>
  <sql-request id="QUERY_MEMBER_FEATURE" desc="会员特征数据">
    <![CDATA[
        SELECT * FROM hemiaodata.report_store_portrait WHERE store_code=:storecode AND hemiao_type=:type
      ]]>
  </sql-request>
  <sql-request id="QUERY_MEMBER_DETAIL" desc="会员详细信息">
    <![CDATA[
       SELECT hemiao_name,hemiao_sex,hemiao_number FROM hemiaodata.report_store_rebuy_days WHERE store_code=:storecode AND hemiao_type=:type
      ]]>
  </sql-request>
  <sql-request id="QUERY_MEMBER_TOTAL" desc="total">
    <![CDATA[
       SELECT count FROM hemiaodata.report_store_rebuy_days WHERE store_code=:storecode AND hemiao_type=:type
      ]]>
  </sql-request>
  <sql-request id="QUERY_MEMBER_REBUY" desc="会员复购">
    <![CDATA[
       SELECT hemiao_count,hemiao_rate,hemiao_type FROM hemiaodata.report_store_rebuy_days WHERE store_code=:storecode
      ]]>
  </sql-request>
  <sql-request id="QUERY_REBUY_GOODS" desc="复购商品">
    <![CDATA[
       SELECT hemiao_count,hemiao_rate,hemiao_type FROM hemiaodata.report_store_rebuy_days WHERE store_code=:storecode
      ]]>
  </sql-request>
  <sql-request id="QUERY_REBUY_TYPE" desc="复购品类">
    <![CDATA[
       SELECT hemiao_count,hemiao_rate,hemiao_type FROM hemiaodata.report_store_rebuy_days WHERE store_code=:storecode
      ]]>
  </sql-request>
  <sql-request id="QUERY_REBUY_BRAND" desc="复购品牌">
    <![CDATA[
       SELECT hemiao_count,hemiao_rate,hemiao_type FROM hemiaodata.report_store_rebuy_days WHERE store_code=:storecode
      ]]></sql-request> -->
    <sql-request id="COMMON_QUERY_GUIDELIST" desc="查询门店导购">
      <![CDATA[
    SELECT name,id FROM hemiaoshadow.sys_store_user WHERE store_code=:storecode AND store_outlet_id=:outletId
    ]]>
    </sql-request>
    <!-- 另一个xml文件使用时报莫名其妙错误，暂将sql语句放于此处 -->
    <sql-request id="QUERY_NEWMEMBER_MONTH" desc="本月新增会员">
      <![CDATA[
      SELECT A.store_code,A.store_outlet_id,A.store_outlet_name,COUNT(A.id_old) hemiao_count ,SUM(A.points) hemiao_count2 FROM (SELECT store_code,store_outlet_id,store_outlet_name,id_old ,points FROM hemiaodata.data_member_analysis1 WHERE store_code=:storecode AND hemiao_date =DATE_FORMAT(NOW(),'%Y-%m') GROUP BY store_code,store_outlet_id,store_outlet_name,id_old) A GROUP BY A.store_code,A.store_outlet_id,A.store_outlet_name
      ]]>
    </sql-request>
    <sql-request id="QUERY_NEWMEMBER_GUIDE" desc="导购新增会员数">
      <![CDATA[
        SELECT A.store_code,A.store_outlet_id,A.store_outlet_name,A.sys_store_user_id,A.work_name,COUNT(A.id_old) hemiao_count ,SUM(A.points) hemiao_count2 FROM (SELECT store_code,store_outlet_id,store_outlet_name,sys_store_user_id,work_name,id_old,points FROM hemiaodata.data_member_analysis1 WHERE store_code=:storecode AND store_outlet_id=:outlet AND hemiao_date=DATE_FORMAT(NOW(),'%Y-%m') GROUP BY store_code,store_outlet_id,store_outlet_name,sys_store_user_id,work_name,id_old) A GROUP BY A.store_code,A.store_outlet_id,A.store_outlet_name,A.sys_store_user_id,A.work_name
      ]]>
    </sql-request>
    <sql-request id="QUERY_GUIDE_DETAIL" desc="新增会员详情">
      <![CDATA[
      SELECT work_name,real_name,user_name,mobile_phone,age,perform_date,last_shopping_time,tot_price FROM hemiaodata.data_member_analysis1 WHERE store_code=:storecode AND store_outlet_id =:outlet AND sys_store_user_id=:userId AND hemiao_date=DATE_FORMAT(NOW(),'%Y-%m') GROUP BY store_code,store_outlet_id,store_outlet_name,sys_store_user_id,work_num,work_name,id_old 
      ]]>
    </sql-request>
    <sql-request id="QUERY_NEWMEMBER_TODAY" desc="今日新增会员">
      <![CDATA[
        SELECT A.store_code,A.store_outlet_id,A.store_outlet_name,COUNT(A.id_old) hemiao_count
        FROM (SELECT store_code,store_outlet_id,store_outlet_name,id_old 
        FROM hemiaodata.data_member_analysis1
        WHERE store_code=:storecode and  hemiao_date =DATE_FORMAT(NOW(),'%Y-%m-%d') GROUP BY store_code,store_outlet_id,store_outlet_name,id_old) A
        GROUP BY A.store_code,A.store_outlet_id,A.store_outlet_name
      ]]>
    </sql-request>
    <sql-request id="QUERY_TODAY_DETAIL" desc="今日新增会员详情包含导购">
      <![CDATA[
        SELECT work_name,real_name,user_name,mobile_phone,age,perform_date,last_shopping_time,tot_price FROM hemiaodata.data_member_analysis1 
        WHERE store_code=:storecode AND store_outlet_id =:outlet and hemiao_date=DATE_FORMAT(NOW(),'%Y-%m-%d') GROUP BY store_code,store_outlet_id,store_outlet_name,sys_store_user_id,work_num,work_name,id_old
      ]]>
    </sql-request>
    <!-- <sql-request id="QUERY_NEWMEMBER_TODAY" desc="今日新增会员"></sql-> -->
    <!-- 消费分布生理轴主图 -->
    <sql-request id="QUERY_AXIS" desc="生理轴消费分布">
      <![CDATA[
      SELECT store_code,baby_age,COUNT(user_id) hemiao_count ,type FROM hemiaodata.data_member_analysis2 WHERE store_code=:storecode AND store_outlet_id IS NOT NULL AND type='reg' GROUP BY store_code,baby_age UNION SELECT store_code,baby_age,COUNT(user_id) hemiao_count ,type FROM hemiaodata.data_member_analysis2 WHERE store_code=:storecode AND store_outlet_id IS NOT NULL AND type='trade' GROUP BY store_code,baby_age
      ]]>
    </sql-request>
    <sql-request id="QUERY_SINGLE_ALL" desc="单次消费金额全量数据">
      <![CDATA[
      SELECT store_code,tot_price,COUNT(user_id) hemiao_count FROM hemiaodata.data_member_analysis2 WHERE store_code=:storecode AND type='trade' GROUP BY store_code,tot_price
      ]]>
    </sql-request>
    <sql-request id="QUERY_SINGLE_MONEY" desc="单次消费金额分布">
      <![CDATA[
      SELECT store_code,baby_age,tot_price,COUNT(user_id) hemiao_count 
      FROM hemiaodata.data_member_analysis2 WHERE store_code=:storecode AND type=:type AND baby_age =:age GROUP BY store_code,baby_age,tot_price
      ]]>
    </sql-request>
    <sql-request id="QUERY_SINGLE_DETAIL" desc="单次消费金额详情">
      <![CDATA[
      SELECT work_name,real_name,user_name,mobile_phone,age,perform_date,last_shopping_time,price FROM hemiaodata.data_member_analysis2 WHERE store_code=:storecode AND baby_age=:age AND tot_price =:tot_price AND hemiao_date='2017-08' GROUP BY store_code,store_outlet_id,store_outlet_name,user_id;
      ]]>
    </sql-request>
    <sql-request id="QUERY_TIME_ALL" desc="消费频次全量数据">
      <![CDATA[
      SELECT store_code,com_no,COUNT(user_id) hemiao_count FROM hemiaodata.data_member_analysis2 WHERE store_code=:storecode AND com_no >=1 AND com_no <= 4  AND type='trade' GROUP BY store_code,com_no
      ]]>
    </sql-request>
    <sql-request id="QUERY_EX_TIME" desc="消费频次人数分布">
      <![CDATA[
      SELECT store_code,baby_age,com_no,COUNT(user_id) hemiao_count FROM hemiaodata.data_member_analysis2 WHERE store_code=:storecode AND com_no >=1 AND com_no <= 4  AND baby_age=:age AND type=:type GROUP BY store_code,baby_age,com_no
      ]]>
    </sql-request>
    <sql-request id="QUERY_TIME_DETAIL" desc="消费频次详情">
      <![CDATA[
      SELECT work_name,real_name,user_name,mobile_phone,age,perform_date,last_shopping_time,price FROM hemiaodata.data_member_analysis2 WHERE store_code=:storecode AND baby_age=:age AND com_no=:com_no AND hemiao_date='2017-08' GROUP BY store_code,store_outlet_id,store_outlet_name,user_id
      ]]>
    </sql-request>
    <sql-request id="QUERY_TRANSFORM" desc="客户维护转换">
      <![CDATA[
      SELECT store_code,days,COUNT(id_old) id_old FROM hemiaodata.data_member_analysis3 WHERE store_code=:storecode GROUP BY store_code,days
      ]]>
    </sql-request>
    <sql-request id="QUERY_TRANS_DETAIL" desc="客户维护转换详情">
      <![CDATA[
      SELECT real_name,user_name,mobile_phone,age,work_name,perform_date,last_shopping_time,tot_price FROM hemiaodata.data_member_analysis3 WHERE store_code=:storecode and days=:days
      ]]>
    </sql-request>


    <!-- 数据中心新sql -->
    <sql-request id="QUERY_HOME_SALE_CHART" desc="月度销售">
      <![CDATA[
         select a.store_outlet_id, store_outlet_name, :currentMonth monthstr, target, amount from (select store_code, store_outlet_id, sum(target_value) target from hemiaodata.hm_guider_appraisal_target_newest where store_code = :storecode and target_object = 1 and target_type = 1 and time_rank = 1 and isvalid = 1 and target_time = :_currentMonth group by store_code, store_outlet_id) a left join (select store_code, store_outlet_id, sum(tot_price) amount from hemiaodata.hm_order_goods_offline_extrecord ord where store_code = :storecode and add_time >= :startDate and add_time <= :endDate and order_status = 0 group by store_code, store_outlet_id) b on a.store_code = b.store_code and a.store_outlet_id = b.store_outlet_id inner join hemiaodata.hm_store_outlet_trim c on a.store_code=c.store_code and a.store_outlet_id=c.store_outlet_id;
      ]]>
    </sql-request>
    <sql-request id="QUERY_SALE_GUIDE" desc="月度销售导购信息">
      <![CDATA[
    select :currentMonth monthstr, target, amount, a.store_user_id, store_outlet_guider_name store_user_name FROM (select store_code, store_outlet_id, store_user_id, sum(target_value) target from hemiaodata.hm_guider_appraisal_target_newest where store_code = :storecode and target_object = 1 and target_type = 1 and time_rank = 1 and target_time = :_currentMonth and store_outlet_id = :outletId group by store_code, store_outlet_id, store_user_id) a left join (select store_code, store_outlet_id, belong_store_user_id, sum(tot_price) amount from hemiaodata.hm_order_goods_offline_extrecord ord where store_code = :storecode and store_outlet_id = :outletId and add_time >= :startDate and add_time <= :endDate and order_status = 0 group by store_code, store_outlet_id, belong_store_user_id) b on a.store_code = b.store_code and a.store_code = b.store_code and a.store_outlet_id = b.store_outlet_id and a.store_user_id = b.belong_store_user_id inner join hemiaodata.hm_store_outlet_guider_trim c on a.store_code = c.store_code and a.store_outlet_id = c.store_outlet_id and a.store_user_id = c.store_outlet_guider_id;
    ]]>
    </sql-request>

    <!-- SELECT d.belong_store_outlet_id,d.store_outlet_name,sum(member_trade_amount) member_trade_amount FROM hemiaodata.hm_daystat_belong_guider_sales_details d WHERE  d.store_code ='42098216030777' AND d.stat_day >=:startDate AND d.stat_day <= '20171131' GROUP BY d.store_code,d.belong_store_outlet_id -->
    <sql-request id="QUERY-SALE-TOTAL" desc="总销售数据分析">
      <![CDATA[
      select t.store_code, belong_store_outlet_id, store_outlet_name belong_store_outlet_name, sum(member_trade_amount) member_trade_amount from hemiaodata.hm_daystat_belong_guider_sales_details t, hemiaodata.hm_store_outlet_trim s where t.store_code = s.store_code and t.belong_store_outlet_id = s.store_outlet_id and t.store_code = :storecode and stat_day >= :startDate and stat_day <= :endDate and t.isvalid = 1 group by t.store_code, belong_store_outlet_id;
    ]]>
    </sql-request>
    <sql-request id="QUERY-SALETOTAL-STORE" desc="总销售数据-门店详情">
    <![CDATA[
    select  s.store_outlet_guider_name ,  sum(member_trade_amount) member_trade_amount from  hemiaodata.hm_daystat_belong_guider_sales_details t,  hemiaodata.hm_store_outlet_guider_trim s where t.store_code = s.store_code  and t.belong_store_outlet_id = s.store_outlet_id and t.belong_store_user_id = s.store_outlet_guider_id and t.store_code = :storecode  and stat_day >= :startDate  and stat_day <= :endDate  and belong_store_outlet_id = :outletId  and t.isvalid = 1 group by t.belong_store_user_id
    ]]>
    </sql-request>
    <sql-request id="QUERY-SALE-DIMENSION" desc="多维度销售数据">
      <![CDATA[
    select t.store_code, brand_offline_id, s.offline_name brand_offline_name, sum(member_trade_amount) member_trade_amount from hemiaodata.hm_daystat_brand_details t,hemiaoshadow.hm_brand_offline s where t.store_code=s.store_code and t.brand_offline_id=s.offline_id and t.store_code = :storecode and stat_day >= :startDate and stat_day <= :endDate and t.isvalid = 1 group by store_code, brand_offline_id order by sum(member_trade_amount) desc
    ]]>
    </sql-request>
    <sql-request id="QUERY-SALEDIM-STORE" desc="多维度销售数据-门店">
      <![CDATA[
    select brand_offline_id, offline_name brand_offline_name, sum(member_trade_amount) member_trade_amount from hemiaodata.hm_daystat_brand_details t,hemiaoshadow.hm_brand_offline s where t.store_code=s.store_code and t.brand_offline_id=s.offline_id and t.store_code = :storecode and left (stat_day, 6) = :currentMonth and store_outlet_id = :outletId and t.isvalid = 1 group by brand_offline_id order by sum(member_trade_amount) desc
    ]]>
    </sql-request>
    <sql-request id="QUERY-SALEDIM-GUIDE" desc="多维度销售数据-导购">
      <![CDATA[
    select brand_offline_id, offline_name brand_offline_name, store_outlet_guider_name belong_store_user_name, sum(member_trade_amount) member_trade_amount from hemiaodata.hm_daystat_brand_details t,hemiaoshadow.hm_brand_offline b, hemiaodata.hm_store_outlet_guider_trim s where t.store_code=b.store_code and t.store_code=s.store_code and b.store_code=s.store_code and t.brand_offline_id=b.offline_id and t.store_outlet_id=s.store_outlet_id and t.belong_store_user_id=s.store_outlet_guider_id and t.store_code = :storecode and left (stat_day, 6) = :currentMonth and t.store_outlet_id = :outletId and belong_store_user_id = :userId and t.isvalid = 1 group by brand_offline_id order by sum(member_trade_amount) desc
    ]]>
    </sql-request>
    <sql-request id="QUERY-STORE-LIST" desc="获取门店列表">
      <![CDATA[
    select id store_outlet_id,name store_outlet_name from hemiaoshadow.hm_store_outlet where store_code=:storecode
    ]]>
    </sql-request>
    <sql-request id="QUERY_NEWMEMBER_COM" desc="月度新客">
      <![CDATA[
   select a.store_outlet_id, store_outlet_name, :currentMonth monthstr, target, newmember_opencard_amount from (select store_code, store_outlet_id, sum(target_value) target from hemiaodata.hm_guider_appraisal_target_newest where store_code = :storecode and target_object = 0 and target_type = 0 and time_rank = 1 and target_time = :_currentMonth group by store_code, store_outlet_id) a left join (select store_code, belong_store_outlet_id, sum(newmember_opencard_amount) newmember_opencard_amount from hemiaodata.hm_daystat_member_details where store_code = :storecode and stat_day >= :startDate and stat_day <= :endDate group by store_code, belong_store_outlet_id) b on a.store_code = b.store_code and a.store_outlet_id = b.belong_store_outlet_id inner join hemiaodata.hm_store_outlet_trim s on a.store_code = s.store_code and a.store_outlet_id = s.store_outlet_id
      ]]>
    </sql-request>
    <sql-request id="QUERY-NEW-GUIDE" desc="查询新客导购信息">
      <![CDATA[
    select :currentMonth monthstr, target, newmember_opencard_amount, a.store_user_id, store_outlet_guider_name store_user_name from (select store_code, store_outlet_id, store_user_id, sum(target_value) target from hemiaodata.hm_guider_appraisal_target_newest where store_code = :storecode and target_object = 0 and target_type = 0 and time_rank = 1 and target_time = :_currentMonth and store_outlet_id = :outletId group by store_code, store_outlet_id, store_user_id) a left join (select store_code, belong_store_outlet_id, belong_store_user_id, sum(newmember_opencard_amount) newmember_opencard_amount from hemiaodata.hm_daystat_member_details where store_code = :storecode and belong_store_outlet_id = :outletId and stat_day >= :startDate and stat_day <= :endDate group by store_code, belong_store_outlet_id, belong_store_user_id) b on a.store_code = b.store_code and a.store_outlet_id = b.belong_store_outlet_id and a.store_user_id = b.belong_store_user_id inner join hemiaodata.hm_store_outlet_guider_trim s on a.store_code = s.store_code and a.store_outlet_id = s.store_outlet_id and a.store_user_id = s.store_outlet_guider_id
    ]]>
    </sql-request>
    <sql-request id="QUERY-OPERA-NEW" desc="查询扫码/注册/绑定">
      <![CDATA[
      SELECT t.store_outlet_id, store_outlet_name, LEFT (stat_day, 6) stat_day, sum(scanqr_amount), sum(reg_amount), sum(bind_amount) FROM hemiaodata.hm_daystat_qrcode_details t, hemiaodata.hm_store_outlet_trim s WHERE t.store_code = s.store_code and t.store_outlet_id = s.store_outlet_id and t.store_code = :storecode AND stat_day >= :startDate AND stat_day <= :endDate and t.isvalid = 1 GROUP BY store_outlet_id;
    ]]>
    </sql-request>
    <sql-request id="QUERY-OPERA-GUIDE" desc="根据门店查询导购的扫码/注册/绑定">
      <![CDATA[
      select t.store_outlet_id, store_outlet_name, t.store_user_id, store_outlet_guider_name store_user_name, left (stat_day, 6) stat_day, sum(scanqr_amount), sum(reg_amount), sum(bind_amount) from hemiaodata.hm_daystat_qrcode_details t, hemiaodata.hm_store_outlet_guider_trim s where t.store_code = s.store_code and t.store_outlet_id = s.store_outlet_id and t.store_user_id = s.store_outlet_guider_id and t.store_code = :storecode and stat_day >= :startDate and stat_day <= :endDate and t.store_outlet_id = :outletId and t.isvalid = 1 group by t.store_outlet_id, t.store_user_id
    ]]>
    </sql-request>
    <sql-request id="OPERA-GUIDE-CURRENTMONTH" desc="查询导购当月扫码/注册/绑定">
      <![CDATA[
    select stat_day,scanqr_amount,reg_amount,bind_amount from hemiaodata.hm_daystat_qrcode_details where store_code = :storecode and store_outlet_id=:outletId and store_user_id=:userId and stat_day >= :startDate and  stat_day<= :endDate
    ]]>
    </sql-request>
    <sql-request id="QUERY-SALE-ORDER" desc="客户订单分析-平均客单价">
      <![CDATA[
      select t.store_code, t.store_outlet_id, store_outlet_name store_outlet_name, sum(member_trade_amount) / sum( member_distinct_trade_order_num ) avg_amount from hemiaodata.hm_daystat_store_outlet_details t, hemiaodata.hm_store_outlet_trim s where t.store_code = s.store_code and t.store_outlet_id = s.store_outlet_id and t.store_code = :storecode and stat_day >= :startDate and stat_day <= :endDate and t.isvalid = 1 group by store_outlet_id
    ]]>
    </sql-request>
    <sql-request id="QUERY-ORDERAVG-AMOUNT" desc="客户订单分析-平均客单价-数据库计算总价">
    <![CDATA[
     select sum(member_trade_amount) / sum(member_distinct_trade_order_num) avg_amount from hemiaodata.hm_daystat_store_outlet_details t,hemiaodata.hm_store_outlet_trim s where t.store_code = s.store_code and t.store_outlet_id = s.store_outlet_id and t.store_code = :storecode and stat_day >= :startDate and stat_day <= :endDate and t.isvalid = 1;
    ]]>
    </sql-request>
   
    <sql-request id="SALE-ORDER-GUIDE" desc="客户订单分析-平均客单价-导购查询">
      <![CDATA[
      select s.store_outlet_guider_id,s.store_outlet_guider_name,sum(member_trade_amount) / sum(member_distinct_trade_order_num) avg_amount from hemiaodata.hm_daystat_store_outlet_sales_details d,hemiaodata.hm_store_outlet_guider_trim s where d.store_code = s.store_code and d.store_outlet_id = s.store_outlet_id and d.belong_store_user_id = s.store_outlet_guider_id and d.store_code = :storecode and d.stat_day >= :startDate and d.stat_day <= :endDate and d.store_outlet_id = :outletId and d.isvalid = 1 group by belong_store_user_id
    ]]> 
    </sql-request>
    <!-- select *from (select d.store_outlet_id, store_outlet_name, belong_store_user_id, store_outlet_guider_name belong_store_user_name, sum(member_trade_amount) / sum(member_distinct_trade_num) avg_amount from hemiaodata.hm_daystat_store_outlet_sales_details d, hemiaodata.hm_store_outlet_guider_trim s where d.store_code = s.store_code and d.store_outlet_id = s.store_outlet_id and d.belong_store_user_id = s.store_outlet_guider_id and d.store_code = :storecode and d.stat_day >= :startDate and d.stat_day <= :endDate and d.store_outlet_id = :outletId and d.isvalid = 1 group by d.store_code, d.store_outlet_id, belong_store_user_id) t where t.avg_amount is not null and t.avg_amount <> '-' -->
    <sql-request id="QUERY-SALE-TIMES" desc="客户订单分析-平均消费次数分析">
      <![CDATA[
    SELECT * FROM (SELECT d.store_outlet_id, store_outlet_name store_outlet_name, sum( member_distinct_trade_order_num ) / sum(member_distinct_trade_num) avg_amount FROM hemiaodata.hm_daystat_store_outlet_sales_details d, hemiaodata.hm_store_outlet_trim s WHERE d.store_code = s.store_code and d.store_outlet_id = s.store_outlet_id and d.store_code = :storecode AND d.stat_day >= :startDate AND d.stat_day <= :endDate and d.isvalid = 1 GROUP BY d.store_code, d.store_outlet_id) t WHERE t.avg_amount is not null and t.avg_amount <> '-'
    ]]>
    </sql-request> 
    <!-- <sql-request id="SALE-TIMES-GUIDE" desc="客户订单分析-平均消费次数分析-导购查询">
    <![CDATA[
    SELECT * FROM (SELECT d.store_outlet_id,d.store_outlet_name,belong_store_user_id,belong_store_user_name,sum(member_distinct_trade_order_num)/sum(member_distinct_trade_num) avg_amount FROM hemiaodata.hm_daystat_store_outlet_sales_details d WHERE	d.store_code =:storecode	AND d.stat_day >=:startDate AND d.stat_day <=:endDate and d.store_outlet_id=:outletId GROUP BY d.store_code,d.store_outlet_id,belong_store_user_id) t WHERE t.avg_amount IS NOT NULL AND t.avg_amount <> '-'
    ]]>
    </sq-request> -->
    <sql-request id="QUERY-OPERA-DEALNUM" desc="维护客户交易人数">
      <![CDATA[
    select ext.store_code,ext.store_outlet_id,r.name,back_type,count(*) from hemiaodata.hm_guider_contact_member_extrecord ext,hemiaoshadow.hm_store_outlet r where ext.store_code = :storecode and ext.back_num between 0 and 30 and ext.store_code = r.store_code and ext.store_outlet_id = r.id and ext.contact_day >=:startDate and ext.contact_day <= :endDate group by ext.store_code,back_type,ext.store_outlet_id
    ]]>
    </sql-request>
    <sql-request id="QUERY-OPERA-DEALTIMES" desc="维护客户购买次数">
      <![CDATA[
    SELECT hgcme.store_code,store_outlet_id,hso.`name`,store_user_id,mb_offline_id,contact_time FROM hemiaodata.hm_guider_contact_member_extrecord hgcme LEFT JOIN hemiaoshadow.hm_store_outlet hso on hgcme.store_outlet_id=hso.id WHERE contact_time >= :startDate AND hgcme.store_code = :storecode;
    select distinct order_id, t.store_code, belong_store_outlet_id, s.store_outlet_name belong_store_outlet_name, belong_store_user_id, member_offline_id, add_time from hemiaodata.hm_order_goods_offline_extrecord t inner join hemiaodata.hm_store_outlet_trim s on t.store_code = s.store_code and t.store_outlet_id = s.store_outlet_id and belong_store_user_id is not null and add_time >= :startDate and t.store_code = :storecode and order_status = 0;
    ]]>
    </sql-request>
    <!-- select DISTINCT order_id,store_code,belong_store_outlet_id,belong_store_outlet_name,belong_store_user_id,member_offline_id,add_time from hemiaodata.hm_order_goods_offline_extrecord where belong_store_user_id is not null and add_time>=:startDate and store_code = :storecode and order_status=0; -->
    <sql-request id="QUERY-OPERA-DEALPRICE" desc="维护客户购买单价">
    <![CDATA[
    select t.store_outlet_id,t.store_outlet_name,t.member_trade_amount_level,sum(t.countvalue) total from (select s.store_outlet_id ,store_outlet_name ,s.member_trade_amount_level,count(t.member_trade_amount_level) countvalue from (select store_code,store_outlet_id,store_outlet_name,'100' member_trade_amount_level from hemiaodata.hm_store_outlet_trim where store_code = :storecode and store_outlet_id <>'-' union select store_code,store_outlet_id,store_outlet_name,'200' member_trade_amount_level from hemiaodata.hm_store_outlet_trim where store_code = :storecode and store_outlet_id <>'-' union select store_code,store_outlet_id,store_outlet_name,'300' member_trade_amount_level from hemiaodata.hm_store_outlet_trim where store_code = :storecode and store_outlet_id <>'-' union select store_code,store_outlet_id,store_outlet_name,'500' member_trade_amount_level from hemiaodata.hm_store_outlet_trim where store_code = :storecode and store_outlet_id <>'-' union select store_code,store_outlet_id,store_outlet_name,'1000' member_trade_amount_level from hemiaodata.hm_store_outlet_trim where store_code = :storecode and store_outlet_id <>'-' union select store_code,store_outlet_id,store_outlet_name,'1000+' member_trade_amount_level from hemiaodata.hm_store_outlet_trim where store_code = :storecode and store_outlet_id <>'-') s left join hemiaodata.hm_daystat_belong_guider_sales_details t on t.store_code = s.store_code and t.store_outlet_id = s.store_outlet_id and length(member_offline_id) > 0 and stat_day >= :startDate and stat_day <= :endDate and t.store_code = :storecode and t.isvalid = 1 and t.member_trade_amount_level=s.member_trade_amount_level group by t.store_outlet_id,s.member_trade_amount_level) t group by t.store_outlet_id, t.member_trade_amount_level  
    ]]>
    </sql-request>
    <!-- select t.belong_store_outlet_id, t.belong_store_outlet_name, t.member_trade_amount_level, sum(t.countvalue) total from (select belong_store_outlet_id, store_outlet_name belong_store_outlet_name, member_trade_amount_level, count(member_trade_amount_level) countvalue from hemiaodata.hm_daystat_belong_guider_sales_details t, hemiaodata.hm_store_outlet_trim s where t.store_code = s.store_code and t.store_outlet_id = s.store_outlet_id and length(member_offline_id) > 0 and stat_day between :startDate and :endDate and t.store_code = :storecode and length(belong_store_outlet_id) > 1 and member_trade_amount_level <> '' and t.isvalid = 1 group by belong_store_outlet_id, member_trade_amount_level) t group by t.belong_store_outlet_id, t.member_trade_amount_level -->
    <sql-request id="QUERY-MEMBER-GEO" desc="会员地理分析图">
      <![CDATA[
      SELECT FORMAT( baidu_lng, 10 ) baidu_lng,FORMAT( baidu_lat, 10 ) baidu_lat,COUNT( * ) elevation FROM hemiaodata.hm_member_lbs_summary WHERE store_code=:storecode and baidu_lng IS NOT NULL AND baidu_lng <> 0 AND baidu_lat IS NOT NULL AND baidu_lat <> 0 GROUP BY FORMAT( baidu_lng, 10 ),FORMAT( baidu_lat, 10 )
    ]]>
    </sql-request>
    <!-- SELECT FORMAT(baidu_lng, 10) baidu_lng,FORMAT(baidu_lat, 10) baidu_lat,COUNT(*) elevation FROM hemiaodata.hm_member_lbs_summary WHERE baidu_lng IS NOT NULL AND baidu_lng <> 0 AND baidu_lat IS NOT NULL AND baidu_lat <> 0 GROUP BY FORMAT(baidu_lng, 10),FORMAT(baidu_lat, 10) -->
    <sql-request id="QUERY-LIFE-AXIS" desc="生理轴分布">
      <![CDATA[
      select s.age_group,b.remark,count(s.id) renshu from hemiaodata.hm_age_group b left join hemiaodata.hm_member_birthday_summary s on b.age_group = s.age_group where b.age_group <> '-1' and store_code =:storecode group by b.age_group order by b.age_group;
    ]]>
    </sql-request>
    <sql-request id="QUERY-MEMBER-LOYAL" desc="忠诚度分析">
      <![CDATA[
       select loyalty_level,count(*) num from hemiaodata.hm_member_loyalty_rating_details  where store_code =:storecode group by loyalty_level
      ]]>
    </sql-request>
  </sql-requests>
</root>